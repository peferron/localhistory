{"version":3,"sources":["localhistory.js"],"names":[],"mappings":"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","file":"localhistory.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    factory((global.localhistory = {}))\n}(this, function (exports) {\n\n    var support = {\n        get supported () { return support__supported; },\n        get throwIfUnsupported () { return throwIfUnsupported; },\n        get promise () { return promise; },\n        get consoleWarn () { return consoleWarn; }\n    };\n\n    // Required features.\n\n    const supportsLocalStorage = (() => {\n        const key = 'localhistory_support_' + Math.random();\n        const value = '' + Math.random();\n        let success = false;\n\n        try {\n            localStorage[key] = value;\n            success = localStorage[key] === value;\n        } catch (e) {}\n\n        try {\n            localStorage.removeItem(key);\n        } catch (e) {\n            success = false;\n        }\n\n        return success;\n    })();\n\n    const support__supported = supportsLocalStorage && typeof JSON === 'object' && 'isArray' in Array;\n\n    function throwIfUnsupported() {\n        if (!support__supported) {\n            throw new Error('This browser does not support localhistory');\n        }\n    }\n\n    // Optional features.\n\n    const promise = typeof Promise === 'function';\n\n    function consoleWarn() {\n        try {\n            console.warn.apply(console, arguments); // eslint-disable-line no-console\n        } catch (e) {}\n    }\n\n    var storage = {\n        get append () { return storage__append; },\n        get load () { return storage__load; },\n        get clear () { return storage__clear; }\n    };\n\n    function storage__append(key, entry, options) {\n        if (options.maxEntries < 1) {\n            throw new Error(`Could not append entry, maxEntries is ${options.maxEntries}`);\n        }\n\n        let entries;\n        try {\n            entries = storage__load(key);\n        } catch (err) {\n            support.consoleWarn('localhistory: could not load previous entries, resetting history',\n                err.message);\n            entries = [];\n        }\n\n        if (!options.appendIfEqualToLast && entries.length &&\n            sameEntry(entry, entries[entries.length - 1])) {\n            return;\n        }\n\n        entries.push(entry);\n        appendEntries(key, entries, options);\n    }\n\n    function sameEntry(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n\n    function appendEntries(key, entries, options) {\n        if (entries.length > options.maxEntries) {\n            entries.splice(0, entries.length - options.maxEntries);\n        }\n\n        while (true) { // eslint-disable-line no-constant-condition\n            const entriesStr = JSON.stringify(entries);\n\n            const entriesBytes = entriesStr.length * 2; // Assumes 16 bits (2 bytes) per code point.\n            if (entriesBytes > options.maxBytes) {\n                if (entries.length < 2) {\n                    throw new Error(`Could not append entry of length ${entriesStr.length} ` +\n                        `(${entriesBytes} bytes), maxBytes is ${options.maxBytes}`);\n                }\n\n                removeFirstHalf(entries);\n                continue;\n            }\n\n            try {\n                localStorage[key] = entriesStr;\n                return;\n            } catch (err) {\n                if (isQuotaError(err)) {\n                    if (entries.length < 2) {\n                        throw new Error(`Could not append entry of length ${entriesStr.length}, ` +\n                            `exceeds localStorage quota`);\n                    }\n\n                    removeFirstHalf(entries);\n                    continue;\n                }\n\n                throw err;\n            }\n        }\n    }\n\n    function removeFirstHalf(arr) {\n        arr.splice(0, Math.ceil(arr.length / 2));\n    }\n\n    function isQuotaError(err) {\n        return err &&\n            (err.code === 22 ||\n             err.code === 1014 && err.name === 'NS_ERROR_DOM_QUOTA_REACHED');\n    }\n\n    function storage__load(key) {\n        const entriesStr = localStorage[key];\n        if (!entriesStr) {\n            return [];\n        }\n\n        const entries = JSON.parse(entriesStr);\n        if (!Array.isArray(entries)) {\n            throw new Error('Loaded entries are not an Array');\n        }\n\n        return entries;\n    }\n\n    function storage__clear(key) {\n        localStorage.removeItem(key);\n    }\n\n    function promisify(fn, callback) {\n        if (!support.promise) {\n            exec(fn, callback);\n            return;\n        }\n\n        return new Promise((resolve, reject) => { // eslint-disable-line consistent-return\n            exec(fn, (err, result) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(result);\n                }\n\n                if (callback) {\n                    callback(err, result);\n                }\n            });\n        });\n    }\n\n    function exec(fn, callback) {\n        let err = null;\n        let result;\n        try {\n            result = fn();\n        } catch (e) {\n            err = e;\n        }\n\n        if (callback) {\n            callback(err, result);\n        }\n    }\n\n    const index__supported = support.supported;\n\n    // key and entry are required, options and callback are optional.\n    function index__append(key, entry, options, callback) {\n        const cb = typeof options === 'function' ? options : callback;\n        const opts = fillAppendOptions(typeof options === 'object' ? options : {});\n\n        return promisify(() => {\n            support.throwIfUnsupported();\n            storage.append(key, entry, opts);\n        }, cb);\n    }\n\n    function fillAppendOptions(options) {\n        if (isNaN(options.maxEntries)) {\n            options.maxEntries = 100;\n        }\n        if (isNaN(options.maxBytes)) {\n            options.maxBytes = 100000;\n        }\n        if (!options.hasOwnProperty('appendIfEqualToLast')) {\n            options.appendIfEqualToLast = true;\n        }\n        return options;\n    }\n\n    // key is required, callback is optional.\n    function index__load(key, callback) {\n        return promisify(() => {\n            support.throwIfUnsupported();\n            return storage.load(key);\n        }, callback);\n    }\n\n    // key is required, callback is optional.\n    function index__clear(key, callback) {\n        return promisify(() => {\n            support.throwIfUnsupported();\n            storage.clear(key);\n        }, callback);\n    }\n\n    exports.supported = index__supported;\n    exports.append = index__append;\n    exports.load = index__load;\n    exports.clear = index__clear;\n\n}));\n"],"sourceRoot":"./"}