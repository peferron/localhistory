{"version":3,"sources":["localhistory.js","localhistory.min.js"],"names":["global","factory","exports","module","define","amd","localhistory","this","throwIfUnsupported","support__supported","Error","consoleWarn","console","warn","apply","arguments","e","storage__save","run","options","maxRuns","runs","undefined","storage__load","err","support","length","sameRun","push","saveRuns","a","b","JSON","stringify","splice","runsStr","runsBytes","maxBytes","removeFirstHalf","localStorage","runsKey","isQuotaError","arr","Math","ceil","code","name","parse","Array","isArray","storage__clear","removeItem","now","fn","promisify","syncFn","callback","asyncFn","promise","Promise","resolve","reject","exec","result","index__save","cb","opts","fillSaveOptions","storage","save","setTimeout","isNaN","index__load","load","index__clear","clear","Object","defineProperties","supported","get","configurable","enumerable","supportsLocalStorage","key","value","random","success","index__supported"],"mappings":"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","file":"localhistory.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    factory((global.localhistory = {}))\n}(this, function (exports) {\n\n    var support = {\n        get supported () { return support__supported; },\n        get throwIfUnsupported () { return throwIfUnsupported; },\n        get promise () { return promise; },\n        get consoleWarn () { return consoleWarn; }\n    };\n\n    // Required features.\n\n    const supportsLocalStorage = (() => {\n        const key = 'localhistory_support_Vo8yTd6aLS$A8huo9$e7';\n        const value = Math.random() + '';\n\n        try {\n            localStorage[key] = value;\n            const success = localStorage[key] === value;\n            localStorage.removeItem(key);\n            return success;\n        } catch (e) {\n            return false;\n        }\n    })();\n\n    const support__supported = supportsLocalStorage && typeof JSON === 'object' && 'isArray' in Array;\n\n    function throwIfUnsupported() {\n        if (!support__supported) {\n            throw new Error('This browser does not support localhistory');\n        }\n    }\n\n    // Optional features.\n\n    const promise = typeof Promise === 'function';\n\n    function consoleWarn() {\n        try {\n            console.warn.apply(console, arguments); // eslint-disable-line no-console\n        } catch (e) { // eslint-disable-line no-empty\n        }\n    }\n\n    var storage = {\n        get save () { return storage__save; },\n        get load () { return storage__load; },\n        get clear () { return storage__clear; }\n    };\n\n    const runsKey = 'localhistory_runs_A*O%y21#Q1WSh^f09YO!';\n\n    function storage__save(run, options) {\n        if (options.maxRuns < 1) {\n            throw new Error(`Could not save run, maxRuns is ${options.maxRuns}`);\n        }\n\n        let runs;\n        try {\n            runs = storage__load();\n        } catch (err) {\n            support.consoleWarn('localhistory: could not load previous runs, resetting history', err);\n            runs = [];\n        }\n\n        if (runs.length && sameRun(run, runs[runs.length - 1])) {\n            return;\n        }\n\n        runs.push(run);\n        saveRuns(runs, options);\n    }\n\n    function sameRun(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n\n    function saveRuns(runs, options) {\n        if (runs.length > options.maxRuns) {\n            runs.splice(0, runs.length - options.maxRuns);\n        }\n\n        while (true) { // eslint-disable-line no-constant-condition\n            const runsStr = JSON.stringify(runs);\n\n            const runsBytes = runsStr.length * 2; // Assumes 16 bits (2 bytes) per code point.\n            if (runsBytes > options.maxBytes) {\n                if (runs.length < 2) {\n                    throw new Error(`Could not save run of length ${runsStr.length} ` +\n                        `(${runsBytes} bytes), maxBytes is ${options.maxBytes}`);\n                }\n\n                removeFirstHalf(runs);\n                continue;\n            }\n\n            try {\n                localStorage[runsKey] = runsStr;\n                return;\n            } catch (err) {\n                if (isQuotaError(err)) {\n                    if (runs.length < 2) {\n                        throw new Error(`Could not save run of length ${runsStr.length}, ` +\n                            `exceeds localStorage quota`);\n                    }\n\n                    removeFirstHalf(runs);\n                    continue;\n                }\n\n                throw err;\n            }\n        }\n    }\n\n    function removeFirstHalf(arr) {\n        arr.splice(0, Math.ceil(arr.length / 2));\n    }\n\n    function isQuotaError(err) {\n        return err &&\n            (err.code === 22 ||\n             err.code === 1014 && err.name === 'NS_ERROR_DOM_QUOTA_REACHED');\n    }\n\n    function storage__load() {\n        const runsStr = localStorage[runsKey];\n        if (!runsStr) {\n            return [];\n        }\n\n        const runs = JSON.parse(runsStr);\n        if (!Array.isArray(runs)) {\n            throw new Error('Loaded runs are not an Array');\n        }\n\n        return runs;\n    }\n\n    function storage__clear() {\n        localStorage.removeItem(runsKey);\n    }\n\n    function now(fn) {\n        fn();\n    }\n\n    function promisify(syncFn, callback, asyncFn = now) {\n        if (!support.promise) {\n            asyncFn(() => {\n                exec(syncFn, callback);\n            });\n\n            return;\n        }\n\n        return new Promise((resolve, reject) => { // eslint-disable-line consistent-return\n            asyncFn(() => {\n                exec(syncFn, (err, result) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(result);\n                    }\n\n                    if (callback) {\n                        callback(err, result);\n                    }\n                });\n            });\n        });\n    }\n\n    function exec(fn, callback) {\n        let err = null;\n        let result;\n        try {\n            result = fn();\n        } catch (e) {\n            err = e;\n        }\n\n        if (callback) {\n            callback(err, result);\n        }\n    }\n\n    const index__supported = support.supported;\n\n    function index__save(run, options, callback) {\n        const cb = typeof options === 'function' ? options : callback;\n        const opts = fillSaveOptions(typeof options === 'object' ? options : {});\n\n        return promisify(() => {\n            support.throwIfUnsupported();\n            storage.save(run, opts);\n        }, cb, setTimeout);\n    }\n\n    function fillSaveOptions(options) {\n        if (isNaN(options.maxRuns)) {\n            options.maxRuns = 100;\n        }\n        if (isNaN(options.maxBytes)) {\n            options.maxBytes = 100000;\n        }\n        return options;\n    }\n\n    function index__load(callback) {\n        return promisify(() => {\n            support.throwIfUnsupported();\n            return storage.load();\n        }, callback);\n    }\n\n    function index__clear(callback) {\n        return promisify(() => {\n            support.throwIfUnsupported();\n            storage.clear();\n        }, callback);\n    }\n\n    exports.supported = index__supported;\n    exports.save = index__save;\n    exports.load = index__load;\n    exports.clear = index__clear;\n\n}));\n","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],n):n(e.localhistory={})}(this,function(e){function n(){if(!b)throw new Error(\"This browser does not support localhistory\")}function r(){try{console.warn.apply(console,arguments)}catch(e){}}function t(e,n){if(n.maxRuns<1)throw new Error(\"Could not save run, maxRuns is \"+n.maxRuns);var r=void 0;try{r=c()}catch(t){y.consoleWarn(\"localhistory: could not load previous runs, resetting history\",t),r=[]}r.length&&o(e,r[r.length-1])||(r.push(e),u(r,n))}function o(e,n){return JSON.stringify(e)===JSON.stringify(n)}function u(e,n){for(e.length>n.maxRuns&&e.splice(0,e.length-n.maxRuns);;){var r=JSON.stringify(e),t=2*r.length;if(t>n.maxBytes){if(e.length<2)throw new Error(\"Could not save run of length \"+r.length+\" \"+(\"(\"+t+\" bytes), maxBytes is \"+n.maxBytes));a(e)}else try{return void(localStorage[S]=r)}catch(o){if(i(o)){if(e.length<2)throw new Error(\"Could not save run of length \"+r.length+\", exceeds localStorage quota\");a(e);continue}throw o}}}function a(e){e.splice(0,Math.ceil(e.length/2))}function i(e){return e&&(22===e.code||1014===e.code&&\"NS_ERROR_DOM_QUOTA_REACHED\"===e.name)}function c(){var e=localStorage[S];if(!e)return[];var n=JSON.parse(e);if(!Array.isArray(n))throw new Error(\"Loaded runs are not an Array\");return n}function f(){localStorage.removeItem(S)}function s(e){e()}function l(e,n){var r=void 0===arguments[2]?s:arguments[2];return y.promise?new Promise(function(t,o){r(function(){g(e,function(e,r){e?o(e):t(r),n&&n(e,r)})})}):void r(function(){g(e,n)})}function g(e,n){var r=null,t=void 0;try{t=e()}catch(o){r=o}n&&n(r,t)}function h(e,n,r){var t=\"function\"==typeof n?n:r,o=p(\"object\"==typeof n?n:{});return l(function(){y.throwIfUnsupported(),x.save(e,o)},t,setTimeout)}function p(e){return isNaN(e.maxRuns)&&(e.maxRuns=100),isNaN(e.maxBytes)&&(e.maxBytes=1e5),e}function d(e){return l(function(){return y.throwIfUnsupported(),x.load()},e)}function m(e){return l(function(){y.throwIfUnsupported(),x.clear()},e)}var y=Object.defineProperties({},{supported:{get:function(){return b},configurable:!0,enumerable:!0},throwIfUnsupported:{get:function(){return n},configurable:!0,enumerable:!0},promise:{get:function(){return w},configurable:!0,enumerable:!0},consoleWarn:{get:function(){return r},configurable:!0,enumerable:!0}}),v=function(){var e=\"localhistory_support_Vo8yTd6aLS$A8huo9$e7\",n=Math.random()+\"\";try{localStorage[e]=n;var r=localStorage[e]===n;return localStorage.removeItem(e),r}catch(t){return!1}}(),b=v&&\"object\"==typeof JSON&&\"isArray\"in Array,w=\"function\"==typeof Promise,x=Object.defineProperties({},{save:{get:function(){return t},configurable:!0,enumerable:!0},load:{get:function(){return c},configurable:!0,enumerable:!0},clear:{get:function(){return f},configurable:!0,enumerable:!0}}),S=\"localhistory_runs_A*O%y21#Q1WSh^f09YO!\",O=y.supported;e.supported=O,e.save=h,e.load=d,e.clear=m});\n//# sourceMappingURL=localhistory.min.js.map"],"sourceRoot":"/source/"}