{"version":3,"sources":["playbyplay.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AACxB,WAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,GAC/E,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,GACzE,OAAO,CAAE,MAAM,CAAC,UAAU,GAAG,EAAE,CAAE,CAAA;CACpC,CAAA,CAAC,IAAI,EAAE,UAAU,OAAO,EAAE;AAAE,gBAAY,CAAC;;AAEtC,QAAM,oBAAoB,GAAG,CAAC,YAAM;AAChC,YAAM,GAAG,GAAG,yCAAyC,CAAC;AACtD,YAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;;AAEjC,YAAI;AACA,wBAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC1B,gBAAI,YAAY,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;AAC7B,uBAAO,KAAK,CAAC;aAChB;SACJ,CAAC,OAAO,CAAC,EAAE;AACR,mBAAO,KAAK,CAAC;SAChB;;AAED,eAAO,IAAI,CAAC;KACf,CAAA,EAAG,CAAC;;AAEL,QAAM,YAAY,GAAG,MAAM,IAAI,MAAM,IAAI,OAAO,IAAI,IAAI,IAAI,WAAW,IAAI,IAAI,CAAC;AAChF,QAAM,eAAe,IAAG,SAAS,IAAI,KAAK,CAAA,CAAC;AAC3C,QAAM,eAAe,GAAG,SAAS,IAAI,MAAM,IAAI,KAAK,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC;;AAEtF,aAAS,KAAK,GAAG;AACb,YAAI,oBAAoB,IAAI,YAAY,IAAI,eAAe,EAAE;AACzD,mBAAO,IAAI,CAAC;SACf;;AAED,YAAI,eAAe,EAAE;AACjB,mBAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;SAChE;;AAED,eAAO,KAAK,CAAC;KAChB;;AAED,QAAI,OAAO,2BAAG,EAGb;AAFO,YAAI;iBAAC,YAAG;AAAE,uBAAO,aAAa,CAAC;aAAE;;;;AACjC,YAAI;iBAAC,YAAG;AAAE,uBAAO,aAAa,CAAC;aAAE;;;;MACxC,CAAC;;;;;;;;;;;;;;;;;AAiBF,QAAM,OAAO,GAAG,sCAAsC,CAAC;;;AAGvD,QAAM,QAAQ,GAAG,KAAK,CAAC;;;AAGvB,QAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC;;AAEpC,QAAM,OAAO,GAAG,GAAG,CAAC;;;;AAIpB,aAAS,aAAa,CAAC,GAAG,EAAE;AACxB,YAAM,IAAI,GAAG,aAAa,EAAE,CAAC;AAC7B,YAAI,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;AACpD,mBAAO;SACV;;AAED,YAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,gBAAQ,CAAC,IAAI,CAAC,CAAC;KAClB;;AAED,aAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AACnB,eAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC;KACjE;;AAED,aAAS,QAAQ,CAAC,IAAI,EAAE;AACpB,YAAI,IAAI,CAAC,MAAM,GAAG,OAAO,EAAE;AACvB,gBAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC;SACzC;;AAED,eAAO,IAAI,EAAE;;AACT,gBAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;AAEnC,gBAAI,OAAO,CAAC,MAAM,GAAG,SAAS,EAAE;AAC5B,oBAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjB,2BAAO,CAAC,KAAK,CAAC,2CAAyC,OAAO,CAAC,MAAM,yBACrD,SAAS,iBAAa,CAAC,CAAC;AACxC,2BAAO;iBACV;;AAED,oBAAI,CAAC,IAAI,CAAC,CAAC;AACX,yBAAS;aACZ;;AAED,gBAAI;AACA,4BAAY,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;AAChC,uBAAO;aACV,CAAC,OAAO,CAAC,EAAE;AACR,oBAAI,YAAY,CAAC,CAAC,CAAC,EAAE;AACjB,wBAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjB,+BAAO,CAAC,KAAK,CAAC,2CAAyC,OAAO,CAAC,MAAM,sCACrC,CAAC,CAAC;AAClC,+BAAO;qBACV;;AAED,2BAAO,CAAC,KAAK,CAAC,6DAA6D,GACvE,8BAA8B,CAAC,CAAC;AACpC,wBAAI,CAAC,IAAI,CAAC,CAAC;AACX,6BAAS;iBACZ;;AAED,uBAAO,CAAC,KAAK,CAAC,gDAAgD,EAAE,CAAC,CAAC,CAAC;AACnE,uBAAO;aACV;SACJ;KACJ;;AAED,aAAS,IAAI,CAAC,IAAI,EAAE;AAChB,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KAClD;;AAED,aAAS,YAAY,CAAC,CAAC,EAAE;AACrB,eAAO,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,4BAA4B,CAAA,AAAC,CAAC;KAC7F;;;;AAID,aAAS,aAAa,GAAG;AACrB,YAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;AACtC,YAAI,CAAC,OAAO,EAAE;AACV,mBAAO,EAAE,CAAC;SACb;;AAED,YAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;AACpC,YAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACtB,mBAAO,EAAE,CAAC;SACb;;AAED,eAAO,IAAI,CAAC;KACf;;AAED,aAAS,aAAa,CAAC,GAAG,EAAE,QAAQ,EAAE;AAClC,YAAI;AACA,mBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC1B,CAAC,OAAO,CAAC,EAAE,EACX;;AAED,eAAO,QAAQ,CAAC;KACnB;;AAED,aAAS,WAAW,CAAC,GAAG,EAAE;AACtB,YAAI,CAAC,KAAK,EAAE,EAAE;AACV,mBAAO;SACV;;AAED,YAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;AACnC,mBAAO,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;AAC3E,mBAAO;SACV;;AAED,kBAAU,CAAC;mBAAM,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;SAAA,EAAE,CAAC,CAAC,CAAC;KAC1C;;AAED,aAAS,WAAW,GAAG;AACnB,YAAI,CAAC,KAAK,EAAE,EAAE;AACV,mBAAO,EAAE,CAAC;SACb;;AAED,eAAO,OAAO,CAAC,IAAI,EAAE,CAAC;KACzB;;AAED,WAAO,CAAC,IAAI,GAAG,WAAW,CAAC;AAC3B,WAAO,CAAC,IAAI,GAAG,WAAW,CAAC;CAE9B,CAAC,CAAE","file":"playbyplay.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    factory((global.playbyplay = {}))\n}(this, function (exports) { 'use strict';\n\n    const supportsLocalStorage = (() => {\n        const key = 'playbyplay_support_Vo8yTd6aLS$A8huo9$e7';\n        const value = Math.random() + '';\n\n        try {\n            localStorage[key] = value;\n            if (localStorage[key] !== value) {\n                return false;\n            }\n        } catch (e) {\n            return false;\n        }\n\n        return true;\n    })();\n\n    const supportsJSON = 'JSON' in window && 'parse' in JSON && 'stringify' in JSON;\n    const supportsIsArray = 'isArray' in Array;\n    const supportsConsole = 'console' in window && 'log' in console && 'error' in console;\n\n    function check() {\n        if (supportsLocalStorage && supportsJSON && supportsIsArray) {\n            return true;\n        }\n\n        if (supportsConsole) {\n            console.error('playbyplay is not supported in this browser');\n        }\n\n        return false;\n    }\n\n    var storage = {\n        get save () { return storage__save; },\n        get load () { return storage__load; }\n    };\n\n    // Optimization ideas if benchmarking reveals performance issues:\n    //\n    // - Do not parse the old runs. The string obtained from localStorage must look like this:\n    //       '[\"old_run\",\"old_run\",...]'\n    //   We could stringify the new run and insert it after the opening bracket:\n    //       '[\"new_run\",\"old_run\",\"old_run\",...]'\n    //   Bonus: when the quota is exceeded, we remove the second half of the array, which is more\n    //   performant than removing the first half.\n    //\n    // - Compression: https://github.com/pieroxy/lz-string\n    //   Could be especially good if the history contains many mostly-similar runs.\n    //\n    // - When trimming because of maxRuns, remove half of the array instead of typically just one run.\n    //   This way, future saves will not need to trim.\n\n    const runsKey = 'playbyplay_runs_A*O%y21#Q1WSh^f09YO!';\n\n    // Max history size in bytes.\n    const maxBytes = 50000;\n\n    // Max length of the stored string. Assumes 16 bits per character.\n    const maxLength = maxBytes * 8 / 16;\n\n    const maxRuns = 200;\n\n    // Save\n\n    function storage__save(run) {\n        const runs = storage__load();\n        if (runs.length && sameRun(run, runs[runs.length - 1])) {\n            return;\n        }\n\n        runs.push(run);\n        saveRuns(runs);\n    }\n\n    function sameRun(a, b) {\n        return a && b && a.input === b.input && a.output === b.output;\n    }\n\n    function saveRuns(runs) {\n        if (runs.length > maxRuns) {\n            runs.splice(0, runs.length - maxRuns);\n        }\n\n        while (true) { // eslint-disable-line no-constant-condition\n            let runsStr = JSON.stringify(runs);\n\n            if (runsStr.length > maxLength) {\n                if (runs.length < 2) {\n                    console.error(`playbyplay: cannot save run of length ${runsStr.length}, ` +\n                        `limit is ${maxLength} code units`);\n                    return;\n                }\n\n                trim(runs);\n                continue;\n            }\n\n            try {\n                localStorage[runsKey] = runsStr;\n                return;\n            } catch (e) {\n                if (isQuotaError(e)) {\n                    if (runs.length < 2) {\n                        console.error(`playbyplay: cannot save run of length ${runsStr.length}, ` +\n                            `exceeds localStorage quota`);\n                        return;\n                    }\n\n                    console.error('playbyplay: localStorage quota exceeded, discarding oldest ' +\n                        'half of history and retrying');\n                    trim(runs);\n                    continue;\n                }\n\n                console.error('playbyplay: could not save run to localStorage', e);\n                return;\n            }\n        }\n    }\n\n    function trim(runs) {\n        runs.splice(runs.length / 2, Number.MAX_VALUE);\n    }\n\n    function isQuotaError(e) {\n        return e && (e.code === 22 || e.code === 1014 && e.name === 'NS_ERROR_DOM_QUOTA_REACHED');\n    }\n\n    // Load\n\n    function storage__load() {\n        const runsStr = localStorage[runsKey];\n        if (!runsStr) {\n            return [];\n        }\n\n        const runs = safeParseJSON(runsStr);\n        if (!Array.isArray(runs)) {\n            return [];\n        }\n\n        return runs;\n    }\n\n    function safeParseJSON(str, fallback) {\n        try {\n            return JSON.parse(str);\n        } catch (e) { // eslint-disable-line no-empty\n        }\n\n        return fallback;\n    }\n\n    function index__save(run) {\n        if (!check()) {\n            return;\n        }\n\n        if (!run || !run.input || !run.output) {\n            console.error('playbyplay.save: input and output properties are required');\n            return;\n        }\n\n        setTimeout(() => storage.save(run), 0);\n    }\n\n    function index__load() {\n        if (!check()) {\n            return [];\n        }\n\n        return storage.load();\n    }\n\n    exports.save = index__save;\n    exports.load = index__load;\n\n}));\n"],"sourceRoot":"/source/"}